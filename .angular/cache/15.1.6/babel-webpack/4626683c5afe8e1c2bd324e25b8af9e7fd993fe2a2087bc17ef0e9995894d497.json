{"ast":null,"code":"import { TICKETS_MOCKED } from '../../mocks/tickets.mock';\nimport { BehaviorSubject } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nvar TicketService = /** @class */function () {\n  function TicketService() {\n    /**\n     * Services Documentation:\n     * https://angular.io/docs/ts/latest/tutorial/toh-pt4.html\n     */\n    this.ticketList = TICKETS_MOCKED;\n    /**\n     * Observable which contains the list of the tickets.\n     * Naming convention: Add '$' at the end of the variable name to highlight it as an Observable.\n     */\n    this.tickets$ = new BehaviorSubject(this.ticketList);\n  }\n  TicketService.prototype.addTicket = function (ticket) {\n    // You need here to update the list of ticket and then update our observable (Subject) with the new list\n    // More info: https://angular.io/tutorial/toh-pt6#the-searchterms-rxjs-subject\n    //Ajout de nouvel ticket dans ticketList\n    this.ticketList.push(ticket);\n    //Mise à jour de l’observable\n    this.tickets$.next(this.ticketList);\n  };\n  /*\n  La méthode deleteTicket(ticket: Ticket) prend un objet Ticket comme argument\n  et utilise la méthode findIndex pour trouver l'indice de l'objet Ticket correspondant dans le tableau ticketList.\n  Si l'objet Ticket est trouvé, la méthode splice est utilisée pour le supprimer du tableau ticketList,\n  puis la méthode next de l'observable tickets$ est appelée pour émettre la nouvelle liste de tickets.\n  */\n  TicketService.prototype.deleteTicket = function (ticket) {\n    var index = this.ticketList.findIndex(function (t) {\n      return t === ticket;\n    });\n    if (index !== -1) {\n      this.ticketList.splice(index, 1);\n      this.tickets$.next(this.ticketList);\n    }\n  };\n  TicketService.ɵfac = function TicketService_Factory(t) {\n    return new (t || TicketService)();\n  };\n  TicketService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: TicketService,\n    factory: TicketService.ɵfac,\n    providedIn: 'root'\n  });\n  return TicketService;\n}();\nexport { TicketService };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}