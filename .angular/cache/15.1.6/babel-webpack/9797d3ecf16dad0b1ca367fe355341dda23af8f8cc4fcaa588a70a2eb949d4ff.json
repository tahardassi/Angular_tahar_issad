{"ast":null,"code":"import _defineProperty from \"/Users/taharissad/M1/S2/web/Angular_tahar_issad/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport { FormBuilder } from '@angular/forms';\nimport { TicketService } from '../../../services/ticket/ticket.service';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"../../../services/ticket/ticket.service\";\nimport * as i3 from \"@angular/common\";\nfunction TicketFormComponent_option_16_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 9);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const currentMajor_r1 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", currentMajor_r1);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", currentMajor_r1, \" \");\n  }\n}\nexport let TicketFormComponent = /*#__PURE__*/(() => {\n  class TicketFormComponent {\n    // Note: We are using here ReactiveForms to create our form. Be careful when you look for some documentation to\n    // avoid TemplateDrivenForm (another type of form)\n    /**\n     * TicketForm: Object which manages the form in our component.\n     * More information about Reactive Forms: https://angular.io/guide/reactive-forms\n     */\n\n    constructor(formBuilder, ticketService) {\n      _defineProperty(this, \"formBuilder\", void 0);\n      _defineProperty(this, \"ticketService\", void 0);\n      _defineProperty(this, \"ticketForm\", void 0);\n      _defineProperty(this, \"MAJOR_LIST\", ['SI', 'GE', 'GB']);\n      this.formBuilder = formBuilder;\n      this.ticketService = ticketService;\n      // Form creation\n      this.ticketForm = this.formBuilder.group({\n        title: [''],\n        description: [''],\n        major: ['']\n      });\n      // You can also add validators to your inputs such as required, maxlength or even create your own validator!\n      // More information: https://angular.io/guide/reactive-forms#simple-form-validation\n      // Advanced validation: https://angular.io/guide/form-validation#reactive-form-validation\n    }\n\n    ngOnInit() {}\n    addTicket() {\n      const ticketToCreate = this.ticketForm.getRawValue();\n      ticketToCreate.date = new Date();\n      ticketToCreate.student = 'Me';\n      this.ticketService.addTicket(ticketToCreate);\n    }\n  }\n  _defineProperty(TicketFormComponent, \"\\u0275fac\", function TicketFormComponent_Factory(t) {\n    return new (t || TicketFormComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.TicketService));\n  });\n  _defineProperty(TicketFormComponent, \"\\u0275cmp\", /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: TicketFormComponent,\n    selectors: [[\"app-ticket-form\"]],\n    decls: 20,\n    vars: 5,\n    consts: [[1, \"ticket-form\", 3, \"formGroup\"], [\"for\", \"title\"], [\"type\", \"text\", \"id\", \"title\", 1, \"input-custom\", 3, \"formControlName\"], [\"for\", \"description\"], [\"type\", \"text\", \"id\", \"description\", 1, \"input-custom\", 3, \"formControlName\"], [\"for\", \"major\"], [\"id\", \"major\", \"name\", \"major\", 1, \"select-custom\", 3, \"formControlName\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [\"type\", \"submit\", 1, \"btn-custom\", 3, \"click\"], [3, \"value\"]],\n    template: function TicketFormComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"h3\");\n        i0.ɵɵtext(1, \"Create a new ticket\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(2, \"form\", 0)(3, \"label\", 1);\n        i0.ɵɵtext(4, \" Title \");\n        i0.ɵɵelement(5, \"br\")(6, \"input\", 2);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(7, \"br\");\n        i0.ɵɵelementStart(8, \"label\", 3);\n        i0.ɵɵtext(9, \" Description \");\n        i0.ɵɵelement(10, \"br\")(11, \"input\", 4);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(12, \"br\");\n        i0.ɵɵelementStart(13, \"label\", 5);\n        i0.ɵɵtext(14, \"Major \");\n        i0.ɵɵelementStart(15, \"select\", 6);\n        i0.ɵɵtemplate(16, TicketFormComponent_option_16_Template, 2, 2, \"option\", 7);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelement(17, \"br\");\n        i0.ɵɵelementStart(18, \"button\", 8);\n        i0.ɵɵlistener(\"click\", function TicketFormComponent_Template_button_click_18_listener() {\n          return ctx.addTicket();\n        });\n        i0.ɵɵtext(19, \"Create\");\n        i0.ɵɵelementEnd()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"formGroup\", ctx.ticketForm);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"formControlName\", \"title\");\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"formControlName\", \"description\");\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"formControlName\", \"major\");\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngForOf\", ctx.MAJOR_LIST);\n      }\n    },\n    dependencies: [i3.NgForOf, i1.ɵNgNoValidate, i1.NgSelectOption, i1.ɵNgSelectMultipleOption, i1.DefaultValueAccessor, i1.SelectControlValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName],\n    styles: [\".card[_ngcontent-%COMP%]{box-shadow:0 3px 1px -2px #0003,0 2px 2px #00000024,0 5px 5px 1px #0000001f;padding:1em 1em 1em 2em;border-radius:.5em;background-color:#fff}.input-custom[_ngcontent-%COMP%], .btn-custom[_ngcontent-%COMP%]{border:1px solid #282828;border-radius:.5em;height:35px}.input-custom[_ngcontent-%COMP%]{padding:1px 0 1px 10px}.btn-custom[_ngcontent-%COMP%]{margin-top:.4em;background-color:#fff}button[_ngcontent-%COMP%]{background-color:transparent;border:none;font-size:1em}\"]\n  }));\n  return TicketFormComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}